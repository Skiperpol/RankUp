# Generated by Django 3.2.11 on 2023-03-28 15:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick', models.CharField(max_length=30, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('data_urodzenia', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, upload_to='')),
                ('opis', models.TextField(blank=True, default='', max_length=500, verbose_name='Opis')),
                ('punkty', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('nazwa_rozgrywki', models.CharField(blank=True, max_length=100, null=True)),
                ('kapitan', models.CharField(blank=True, max_length=100, null=True)),
                ('wiadomosci', models.CharField(blank=True, max_length=100, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('date_added',),
            },
        ),
        migrations.CreateModel(
            name='Rozgrywki',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa_rozgrywki', models.CharField(max_length=100)),
                ('nazwa_turnieju', models.CharField(max_length=100)),
                ('druzyna1', models.CharField(blank=True, max_length=100, null=True)),
                ('druzyna2', models.CharField(blank=True, max_length=100, null=True)),
                ('winner', models.CharField(blank=True, max_length=100, null=True)),
                ('mecz', models.IntegerField(blank=True, null=True)),
                ('faza', models.IntegerField(blank=True, null=True)),
                ('screen_druzyna1', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('screen_druzyna2', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('kto_wygral_druzyna1', models.CharField(blank=True, max_length=100, null=True)),
                ('kto_wygral_druzyna2', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.ManyToManyField(blank=True, null=True, to='backend.Message')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=100)),
                ('opis', models.CharField(blank=True, max_length=200, null=True)),
                ('zdjecie', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('creator', models.EmailField(max_length=254)),
                ('punkty', models.IntegerField(default=0)),
                ('players', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=100, unique=True)),
                ('opis', models.CharField(blank=True, max_length=200, null=True)),
                ('zdjecie', models.ImageField(blank=True, default='images/1.png', upload_to='images/')),
                ('nagroda', models.CharField(blank=True, max_length=100, null=True)),
                ('data', models.DateTimeField()),
                ('ilosc_druzyn', models.IntegerField(validators=[django.core.validators.MaxValueValidator(32), django.core.validators.MinValueValidator(4)])),
                ('creator', models.EmailField(max_length=254)),
                ('rodzaj_gry', models.CharField(choices=[('League of Legends', 'League of Legends'), ('Valorant', 'Valorant'), ('Counter-Strike: Global Offensive', 'Counter-Strike: Global Offensive')], max_length=100)),
                ('format_rozgrywek', models.CharField(choices=[('5vs5', '5vs5'), ('2vs2', '2vs2'), ('1vs1', '1vs1')], max_length=10)),
                ('started', models.BooleanField(default=False)),
                ('druzyny', models.ManyToManyField(blank=True, null=True, to='backend.Team')),
                ('rozgrywki', models.ManyToManyField(blank=True, null=True, to='backend.Rozgrywki')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='backend.rozgrywki'),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL),
        ),
    ]
